{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/card.tsx", "../app/components/navbar.tsx", "../app/components/input.tsx", "../app/components/button.tsx", "../app/components/form.tsx", "../app/components/image.tsx", "../app/components/profile-card.tsx", "../app/components/post-card.tsx", "../app/components/comment.tsx", "../app/components/replies.tsx", "../app/components/comment-section.tsx", "../app/components/add-comment.tsx", "../app/components/footer.tsx", "../app/lib/database.server.ts", "../app/lib/auth.server.ts", "../app/routes/user.$username.tsx", "../app/routes/auth.callback.tsx", "../app/routes/post.$postid.tsx", "../app/routes/logout.tsx", "../app/routes/signup.tsx", "../app/routes/_index.tsx", "../app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext,\r\n  loadContext: AppLoadContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport {\n  json,\n  MetaFunction,\n  type LinksFunction,\n  type LoaderFunctionArgs } from\n\"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\nimport styles from \"./tailwind.css\";\nimport { Footer, Navbar } from \"./components\";\nimport { getUser } from \"./lib/auth.server\";\nimport type { TPost, TUser } from \"./types\";\nexport const links: LinksFunction = () => [\n...(cssBundleHref ?\n[{ rel: \"stylesheet\", href: cssBundleHref }] :\n[{ rel: \"stylesheet\", href: styles }])];\n\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const response = new Response();\n  const data = await getUser(request, response);\n  return json(data, { headers: response.headers });\n};\nexport default function App() {\n  const loaderData = useLoaderData<{user: TUser;posts: TPost[];}>();\n  return (\n    <html lang=\"en\" data-theme=\"dracula\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charSet=\"utf-8\" />\r\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n\t\t\t\t<Meta />\r\n\t\t\t\t<Links />\r\n\t\t\t</head>\r\n\t\t\t<body className=\" md:max-w-5xl mx-auto \">\r\n\t\t\t\t<Navbar user={loaderData?.user} />\r\n\t\t\t\t<main className=\"min-h-screen mt-4 px-4 md:px-0\">\r\n\t\t\t\t\t<Outlet />\r\n\t\t\t\t</main>\r\n\t\t\t\t<Footer />\r\n\t\t\t\t<ScrollRestoration />\r\n\t\t\t\t<Scripts />\r\n\t\t\t\t<LiveReload />\r\n\t\t\t</body>\r\n\t\t</html>);\n\n}", "import {\r\n\tChatBubbleOvalLeftIcon,\r\n\tHeartIcon,\r\n\tPaperAirplaneIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { HeartIcon as HeartIconSolid } from \"@heroicons/react/24/solid\";\r\nimport type { TComments, TPost, TUser } from \"~/types\";\r\nimport { AddCommentInput, ImageComponent } from \".\";\r\nimport { Form, Link } from \"@remix-run/react\";\r\nimport { useRef, useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\nexport function Card({\r\n\tpost,\r\n\tlink,\r\n\thref,\r\n\tcurrentUser,\r\n\tcomments,\r\n}: {\r\n\tlink?: boolean;\r\n\thref?: string;\r\n\tpost: TPost;\r\n\tcurrentUser: TUser;\r\n\tcomments: TComments[];\r\n}) {\r\n\tconst currentPostComments = comments.filter(\r\n\t\t(comment) => comment.post_id! === post.id\r\n\t);\r\n\tconst [comment, setComment] = useState(\"\");\r\n\tconst commentInputRef = useRef<HTMLInputElement>(null);\r\n\treturn (\r\n\t\t<div className=\"mx-auto my-1 aspect-[4/5] max-w-sm rounded-sm  text-base-content\">\r\n\t\t\t<div className=\"flex gap-2 my-2 items-center\">\r\n\t\t\t\t<Link to={`/user/${post.user?.username}`} className=\"avatar\">\r\n\t\t\t\t\t<div className=\"w-9 h-9 rounded-full ring ring-primary ring-offset-base-100 ring-offset-1\">\r\n\t\t\t\t\t\t<img src={post.user?.avatar} alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to={`/user/${post.user?.username}`}>\r\n\t\t\t\t\t<p>{post.user?.username}</p>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"tooltip tooltip-bottom\"\r\n\t\t\t\t\tdata-tip={dayjs(post.created_at).format(\"MMMM, D YYYY\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p className=\"text-gray-400\">\r\n\t\t\t\t\t\t{dayjs().diff(post.created_at, \"week\")}w\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ImageComponent\r\n\t\t\t\tsrc={post.image}\r\n\t\t\t\tclassName=\" mt-3 mb-2 w-full h-full border border-neutral\"\r\n\t\t\t\talt={post.title}\r\n\t\t\t/>\r\n\r\n\t\t\t<div className=\" pb-4 border-b border-b-neutral\">\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<section className=\"flex gap-2 items-center my-1 text-neutral-content\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tmethod=\"post\"\r\n\t\t\t\t\t\t\tencType=\"multipart/form-data\"\r\n\t\t\t\t\t\t\tclassName=\"flex items-center\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"post_id\" value={post.id} />\r\n\t\t\t\t\t\t\t<button name=\"_action\" value=\"like\">\r\n\t\t\t\t\t\t\t\t{post.likes.find((like) => like.user.id === currentUser.id) ? (\r\n\t\t\t\t\t\t\t\t\t<HeartIconSolid className=\"w-7 h-7\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<HeartIcon className=\"w-7 h-7\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t<button onClick={() => commentInputRef.current?.focus()}>\r\n\t\t\t\t\t\t\t<ChatBubbleOvalLeftIcon className=\"w-7 h-7\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<PaperAirplaneIcon className=\"w-7 h-7\" />\r\n\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t<p className=\"text-sm font-semibold\">{post.likes.length} likes</p>\r\n\t\t\t\t\t<div className=\"flex gap-1\">\r\n\t\t\t\t\t\t<Link to={`/user/${post.user?.username}`} className=\"font-semibold\">\r\n\t\t\t\t\t\t\t{post.user?.username}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<p>{post.title}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Link to={`/post/${post.id}`} className=\"text-sm text-gray-400\">\r\n\t\t\t\t\t\tView all {currentPostComments.length} comments\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<div className=\"flex gap-1\">\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={`/user/${\r\n\t\t\t\t\t\t\t\tcurrentPostComments[comments.length - 1]?.user.username\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tclassName=\"font-semibold\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{currentPostComments[comments.length - 1]?.user.username}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<p>{currentPostComments[comments.length - 1]?.comment.text}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<AddCommentInput\r\n\t\t\t\t\t\tref={commentInputRef}\r\n\t\t\t\t\t\tcommentInput={comment}\r\n\t\t\t\t\t\tcomments={comments}\r\n\t\t\t\t\t\tparentId=\"\"\r\n\t\t\t\t\t\tpost_id={post.id}\r\n\t\t\t\t\t\tsetCommentInput={setComment}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import { Form, Link, useNavigation } from \"@remix-run/react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport type { TUser } from \"~/types\";\r\nimport { InputComponent } from \"./input\";\r\nimport { Button, ButtonType } from \"./button\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nexport function Navbar({ user }: { user: TUser }) {\r\n\tconst transition = useNavigation();\r\n\tconst addingPost =\r\n\t\ttransition.state === \"submitting\" &&\r\n\t\ttransition?.formData?.get(\"_action\") === \"addPost\";\r\n\tconst addPostRef = useRef<HTMLFormElement | null>(null);\r\n\tuseEffect(() => {\r\n\t\taddPostRef.current?.reset();\r\n\t}, [addingPost]);\r\n\treturn (\r\n\t\t<nav className=\"navbar rounded-md bg-secondary \">\r\n\t\t\t<div className=\"flex-1\">\r\n\t\t\t\t<Link to=\"/\" className=\"btn btn-ghost normal-case text-xl\">\r\n\t\t\t\t\t@Connect\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"flex-none gap-2\">\r\n\t\t\t\t{!user && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Link className=\"btn btn-ghost\" to=\"/login\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link className=\"btn btn-ghost\" to=\"/signup\">\r\n\t\t\t\t\t\t\tSignup\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{user && (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tref={addPostRef}\r\n\t\t\t\t\t\tclassName=\"flex items-center gap-2\"\r\n\t\t\t\t\t\tmethod=\"post\"\r\n\t\t\t\t\t\taction=\"/?index\"\r\n\t\t\t\t\t\tencType=\"multipart/form-data\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<InputComponent\r\n\t\t\t\t\t\t\tclassName=\"file-input-sm max-w-52\"\r\n\t\t\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\taccept=\"image/png, image/jpeg\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputComponent\r\n\t\t\t\t\t\t\tclassName=\"input-sm\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tname=\"_action\"\r\n\t\t\t\t\t\t\tvalue=\"addPost\"\r\n\t\t\t\t\t\t\tbuttonType={ButtonType.Ghost}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAdd Post\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className=\"dropdown dropdown-end\">\r\n\t\t\t\t\t{user && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t\t\t\t{ \"btn btn-ghost btn-circle avatar\": true },\r\n\t\t\t\t\t\t\t\t\t{ \"placeholder \": !user.avatar_bucket_id }\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{user.avatar_bucket_id ? (\r\n\t\t\t\t\t\t\t\t\t<div className=\"w-10  rounded-full\">\r\n\t\t\t\t\t\t\t\t\t\t<img src={user?.avatar} loading=\"lazy\" alt=\"Account\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"bg-neutral-focus text-neutral-content rounded-full w-10 \">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-lg\">{user?.username?.charAt(0)}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<ul\r\n\t\t\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\"mt-3 z-[1] p-2 shadow menu menu-sm dropdown-content bg-secondary text-secondary-content rounded-box w-52\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Link to={`/user/${user.username}`}>Profile</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Link to={`/settings`}>Settings</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Form method=\"post\" className=\"flex\" action=\"/logout\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"w-full text-start\">Logout</button>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n", "import cn from \"classnames\";\r\ntype InputComponentProps = {\r\n\tclassName?: string;\r\n\ticon?: React.ReactNode;\r\n} & Omit<React.InputHTMLAttributes<HTMLInputElement>, \"className\">;\r\nexport const InputComponent = ({\r\n\tclassName,\r\n\ticon,\r\n\t...props\r\n}: InputComponentProps) => {\r\n\treturn (\r\n\t\t<label\r\n\t\t\tclassName={cn(\r\n\t\t\t\t{\r\n\t\t\t\t\t\"input input-bordered  flex items-center gap-2\":\r\n\t\t\t\t\t\tprops.type !== \"hidden\" && props.type !== \"file\",\r\n\t\t\t\t},\r\n\t\t\t\tprops.type !== \"file\" && className\r\n\t\t\t)}\r\n\t\t>\r\n\t\t\t{icon}\r\n\t\t\t<input\r\n\t\t\t\t{...props}\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgrow: props.type !== \"hidden\" && props.type !== \"file\",\r\n\t\t\t\t\t\t\"file-input file-input-bordered w-full\": props.type === \"file\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tprops.type === \"file\" && className\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t);\r\n};\r\n", "import cn from \"classnames\";\r\n\r\nexport enum ButtonType {\r\n\tPrimary = \"btn-primary\",\r\n\tSecondary = \"btn-secondary\",\r\n\tNeutral = \"btn-neutral\",\r\n\tAccent = \"btn-accent\",\r\n\tLight = \"btn-light\",\r\n\tGhost = \"btn-ghost\",\r\n\tLink = \"btn-link\",\r\n}\r\ntype ButtonProps = {\r\n\tclassname?: string;\r\n\tchildren: React.ReactNode;\r\n\tbuttonType?: ButtonType;\r\n} & Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"classname\">;\r\nexport function Button({\r\n\tclassname,\r\n\tchildren,\r\n\tbuttonType = ButtonType.Primary,\r\n\t...props\r\n}: ButtonProps) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={cn(\"btn btn-sm md:btn-md\", buttonType, classname)}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n}\r\n", "import { Form, type FormProps } from \"@remix-run/react\";\r\nimport React from \"react\";\r\ntype FormComponentProps = {\r\n\tchildren: React.ReactNode;\r\n} & Omit<FormProps & React.RefAttributes<HTMLFormElement>, \"classname\">;\r\nexport const FormComponent = ({ children, ...props }: FormComponentProps) => {\r\n\treturn (\r\n\t\t<Form className=\"flex flex-col max-w-md mx-auto gap-2\" {...props}>\r\n\t\t\t{children}\r\n\t\t</Form>\r\n\t);\r\n};\r\n", "import classNames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const ImageComponent = ({\r\n  className,\r\n  src,\r\n  alt,\r\n}: {\r\n  className?: string;\r\n  src: string;\r\n  alt: string;\r\n}) => {\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  useEffect(() => {\r\n    setHasLoaded(true);\r\n  }, []);\r\n  return (\r\n    <div className={className}>\r\n      {!hasLoaded && (\r\n        <div className=\"animate-pulse flex items-center justify-center w-full h-full bg-base-100  \">\r\n          <svg\r\n            className=\"animate-pulse w-10 h-10 text-base-200 \"\r\n            aria-hidden=\"true\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 18\"\r\n          >\r\n            <path d=\"M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z\" />\r\n          </svg>\r\n        </div>\r\n      )}\r\n      <img\r\n        src={src}\r\n        className={classNames(\r\n          { \"h-full w-full object-cover\": true },\r\n          { hidden: !hasLoaded }\r\n        )}\r\n        onLoad={() => setHasLoaded(true)}\r\n        alt={alt}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n", "import type { TPost } from \"~/types\";\r\nimport { ChatBubbleOvalLeftIcon, HeartIcon } from \"@heroicons/react/24/solid\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\nexport const ProfileCard = ({ post }: { post: TPost }) => {\r\n\treturn (\r\n\t\t<Link to={`/post/${post.id}`} className=\"group relative\">\r\n\t\t\t<div className=\"w-full h-full bg-gray-700 bg-opacity-20 hidden group-hover:flex items-center justify-center z-1 absolute gap-4 inset-0 \">\r\n\t\t\t\t<div className=\"flex gap-1 items-center\">\r\n\t\t\t\t\t<HeartIcon className=\"w-5 h-5\" />\r\n\t\t\t\t\t<p className=\"font-semibold text-lg\">{post.likes.length}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex gap-1 items-center\">\r\n\t\t\t\t\t<ChatBubbleOvalLeftIcon className=\"w-5 h-5\" />\r\n\t\t\t\t\t<p className=\"font-semibold text-lg\">{post.comments?.length}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"w-full h-full object-center object-cover rounded-md\"\r\n\t\t\t\tsrc={post.image}\r\n\t\t\t\talt={post.title}\r\n\t\t\t/>\r\n\t\t</Link>\r\n\t);\r\n};\r\n", "import { TComments, TPost, TUser } from \"~/types\";\r\nimport dayjs from \"dayjs\";\r\nimport { CommentSection, ImageComponent } from \".\";\r\n\r\nexport function PostCard({\r\n\tpost,\r\n\tcurrentUser,\r\n\tcomments,\r\n}: {\r\n\tpost: TPost;\r\n\tcurrentUser: TUser;\r\n\tcomments: TComments[];\r\n}) {\r\n\treturn (\r\n\t\t<div className=\"card card-side bg-base-100 shadow-xl\">\r\n\t\t\t<ImageComponent\r\n\t\t\t\tclassName=\"max-w-xl max-h-[36rem]\"\r\n\t\t\t\tsrc={post.image}\r\n\t\t\t\talt={post.title}\r\n\t\t\t/>\r\n\t\t\t<div className=\"card-body pb-4\">\r\n\t\t\t\t<h2 className=\"card-title\">{post.title}</h2>\r\n\t\t\t\t<div className=\"flex gap-4 my-6 items-center\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"rounded-full w-14 h-14 object-cover\"\r\n\t\t\t\t\t\tsrc={post.user?.avatar!}\r\n\t\t\t\t\t\talt={post.user?.username!}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p className=\" font-bold capitalize text-sm\">\r\n\t\t\t\t\t\t\t{post.user?.username}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className=\"text-sm\">{post.user?.followers?.length} followers</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<CommentSection\r\n\t\t\t\t\tcurrentUser={currentUser}\r\n\t\t\t\t\tpost={post}\r\n\t\t\t\t\tcomments={comments}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport dayjs from \"dayjs\";\r\nimport { TComments } from \"~/types\";\r\n\r\nexport function Comment({\r\n\tcomment,\r\n\r\n\tchildren,\r\n\tsetComment,\r\n\tsetParentId,\r\n\tisReply,\r\n}: {\r\n\tcomment: TComments;\r\n\tchildren?: React.ReactNode;\r\n\tsetComment: React.Dispatch<React.SetStateAction<string>>;\r\n\tsetParentId: React.Dispatch<React.SetStateAction<string>>;\r\n\tisReply: boolean;\r\n}) {\r\n\tlet splitComment = \"\";\r\n\tlet username = \"\";\r\n\tlet newComment = comment.comment.text;\r\n\tif (isReply) {\r\n\t\tsplitComment = comment.comment.text.split(\" \")[0];\r\n\t\tnewComment = comment.comment.text.replace(splitComment, \"\");\r\n\t\tnewComment.trimStart();\r\n\t\tusername = splitComment.replace(\"@\", \"\");\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"my-2\">\r\n\t\t\t<div className=\"flex  items-center justify-center gap-1\">\r\n\t\t\t\t<Link to={`/user/${comment.user.username}`}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"w-8 h-8 rounded-full object-cover\"\r\n\t\t\t\t\t\tsrc={comment.user.avatar}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<p className=\" inline-block max-w-fit\">{comment.user.username}</p>\r\n\t\t\t\t<p className=\"text-sm text-gray-500\">\r\n\t\t\t\t\t{dayjs(comment.comment.created_at).fromNow()}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"ml-9 text-sm flex gap-1\">\r\n\t\t\t\t{isReply && (\r\n\t\t\t\t\t<Link className=\"font-semibold\" to={`/user/${username}`}>\r\n\t\t\t\t\t\t{splitComment}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t)}\r\n\t\t\t\t<p>{newComment}</p>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetComment(`@${comment.user.username}`);\r\n\t\t\t\t\tif (isReply) {\r\n\t\t\t\t\t\tsetParentId(comment.parent_comment!.id);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetParentId(comment.comment.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tclassName=\"text-sm \"\r\n\t\t\t>\r\n\t\t\t\treply\r\n\t\t\t</button>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import { SupabaseClient } from \"@supabase/supabase-js\";\r\nimport dayjs from \"dayjs\";\r\nimport { TComments } from \"~/types\";\r\nimport { Comment, Reply } from \".\";\r\nimport { useState } from \"react\";\r\nimport { MinusIcon } from \"@heroicons/react/24/outline\";\r\n\r\nexport function Replies({\r\n\treplies,\r\n\t/* supabase, */\r\n\tsetComment,\r\n\tsetParentId,\r\n}: {\r\n\treplies: TComments[] | undefined;\r\n\t/* supabase: SupabaseClient<any, \"public\", any>; */\r\n\tsetComment: React.Dispatch<React.SetStateAction<string>>;\r\n\tsetParentId: React.Dispatch<React.SetStateAction<string>>;\r\n}) {\r\n\tconst [showReplies, setShowReplies] = useState(false);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{replies && replies.length > 0 ? (\r\n\t\t\t\t<div className=\"flex items-center gap-4\">\r\n\t\t\t\t\t<span className=\"bg-neutral w-10 h-px\" />\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"text-sm\"\r\n\t\t\t\t\t\tonClick={() => setShowReplies((prev) => !prev)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{showReplies\r\n\t\t\t\t\t\t\t? `Hide all replies`\r\n\t\t\t\t\t\t\t: `View all ${replies?.length} replies`}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\r\n\t\t\t{showReplies &&\r\n\t\t\t\treplies?.map((reply) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"ml-14\" key={reply.comment.id}>\r\n\t\t\t\t\t\t\t<Comment\r\n\t\t\t\t\t\t\t\tisReply\r\n\t\t\t\t\t\t\t\tsetParentId={setParentId}\r\n\t\t\t\t\t\t\t\tsetComment={setComment}\r\n\t\t\t\t\t\t\t\tcomment={reply}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import { TComments, TPost, TUser } from \"~/types\";\r\nimport { AddCommentInput, Comment, Replies } from \".\";\r\nimport {\r\n\tHeartIcon,\r\n\tChatBubbleOvalLeftIcon,\r\n\tPaperAirplaneIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { HeartIcon as HeartIconSolid } from \"@heroicons/react/24/solid\";\r\nimport { Form } from \"@remix-run/react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useRef, useState } from \"react\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\nexport function CommentSection({\r\n\tcomments,\r\n\tpost,\r\n\tcurrentUser,\r\n}: {\r\n\tcomments: TComments[];\r\n\tpost: TPost;\r\n\tcurrentUser: TUser;\r\n}) {\r\n\tconst [comment, setComment] = useState(\"\");\r\n\tconst [parentId, setParentId] = useState(\"\");\r\n\tconst commentInputRef = useRef<HTMLInputElement>(null);\r\n\treturn (\r\n\t\t<div className=\"flex flex-col flex-1\">\r\n\t\t\t<div className=\"flex flex-col flex-1 overflow-y-auto max-h-[248px]\">\r\n\t\t\t\t{comments\r\n\t\t\t\t\t?.filter((comment) => comment.parent_comment === null)\r\n\t\t\t\t\t.map((comment) => {\r\n\t\t\t\t\t\t/* const commentAvatar = supabase.storage\r\n\t\t\t\t\t\t\t\t\t.from(comment.user.avatar_bucket_id!)\r\n\t\t\t\t\t\t\t\t\t.getPublicUrl(comment.user.avatar_name!); */\r\n\t\t\t\t\t\tconst replies = comments?.filter(\r\n\t\t\t\t\t\t\t(child) => comment.comment.id === child.parent_comment?.id\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconsole.log(replies);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={comment.comment.id}>\r\n\t\t\t\t\t\t\t\t<Comment\r\n\t\t\t\t\t\t\t\t\tisReply={false}\r\n\t\t\t\t\t\t\t\t\tsetComment={setComment}\r\n\t\t\t\t\t\t\t\t\tsetParentId={setParentId}\r\n\t\t\t\t\t\t\t\t\tcomment={comment}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Replies\r\n\t\t\t\t\t\t\t\t\t\tsetParentId={setParentId}\r\n\t\t\t\t\t\t\t\t\t\tsetComment={setComment}\r\n\t\t\t\t\t\t\t\t\t\treplies={replies}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Comment>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<section className=\"flex gap-2 my-1 text-neutral-content\">\r\n\t\t\t\t\t<Form method=\"post\" className=\"w-7 h-7\">\r\n\t\t\t\t\t\t<input type=\"hidden\" name=\"post_id\" value={post.id} />\r\n\t\t\t\t\t\t<button name=\"_action\" value=\"like\">\r\n\t\t\t\t\t\t{post.likes.find((like) => like.user.id === currentUser.id) ? (\r\n\t\t\t\t\t\t\t\t\t<HeartIconSolid className=\"w-7 h-7\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<HeartIcon className=\"w-7 h-7\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Form>\r\n\r\n\t\t\t\t\t<button onClick={() => commentInputRef.current?.focus()}>\r\n\t\t\t\t\t\t<ChatBubbleOvalLeftIcon className=\"w-7 h-7\" />\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<PaperAirplaneIcon className=\"w-7 h-7\" />\r\n\t\t\t\t</section>\r\n\t\t\t\t<p>{post.likes.length} likes</p>\r\n\t\t\t\t<p className=\"text-xs\">\r\n\t\t\t\t\t{dayjs().diff(post.created_at, \"week\") > 0\r\n\t\t\t\t\t\t? dayjs(post.created_at).format(\"[the] DD MMMM\")\r\n\t\t\t\t\t\t: dayjs(post.created_at).fromNow()}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"mt-6 flex gap-2\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"rounded-full w-9 h-9 object-cover\"\r\n\t\t\t\t\t\tsrc={currentUser.avatar}\r\n\t\t\t\t\t\talt={currentUser.username}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AddCommentInput\r\n\t\t\t\t\t\tref={commentInputRef}\r\n\t\t\t\t\t\tcommentInput={comment}\r\n\t\t\t\t\t\tsetCommentInput={setComment}\r\n\t\t\t\t\t\tcomments={comments}\r\n\t\t\t\t\t\tparentId={parentId}\r\n\t\t\t\t\t\tpost_id={post.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import { Form } from \"@remix-run/react\";\r\nimport { forwardRef, useState } from \"react\";\r\nimport { TComments } from \"~/types\";\r\n\r\nexport const AddCommentInput = forwardRef<\r\n\tHTMLInputElement,\r\n\t{\r\n\t\tparentId: string;\r\n\t\tpost_id: string;\r\n\t\tcommentInput: string;\r\n\t\tsetCommentInput: React.Dispatch<React.SetStateAction<string>>;\r\n\t\tcomments: TComments[];\r\n\t}\r\n>(({ commentInput, setCommentInput, parentId, post_id, comments }, ref) => {\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={() => setCommentInput(\"\")}\r\n\t\t\tmethod=\"post\"\r\n\t\t\tencType=\"multipart/form-data\"\r\n\t\t\tclassName=\"flex\"\r\n\t\t>\r\n\t\t\t<input type=\"hidden\" name=\"parent_id\" value={parentId} />\r\n\t\t\t<input\r\n\t\t\t\tref={ref}\r\n\t\t\t\tname=\"comment\"\r\n\t\t\t\tonChange={(e) => setCommentInput(e.target.value)}\r\n\t\t\t\tvalue={commentInput}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder={\r\n\t\t\t\t\tcomments?.length! > 0\r\n\t\t\t\t\t\t? \"Add a comment...\"\r\n\t\t\t\t\t\t: \"Be the first to comment!\"\r\n\t\t\t\t}\r\n\t\t\t\tclassName=\"text-sm bg-inherit focus:border-0 focus:outline-none w-full max-w-xs\"\r\n\t\t\t/>\r\n\t\t\t<input type=\"hidden\" name=\"post_id\" value={post_id} />\r\n\t\t\t{commentInput.length > 0 ? (\r\n\t\t\t\t<button className=\"text-sm\" name=\"_action\" value=\"comment\">\r\n\t\t\t\t\tPost\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t</Form>\r\n\t);\r\n});\r\n", "import { Link } from \"@remix-run/react\";\r\n\r\nexport function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer footer-center p-10 rounded\">\r\n\t\t\t<nav className=\"grid grid-flow-col gap-4\">\r\n\t\t\t\t<Link to=\"https://www.adamkindberg.com/\" className=\"link link-hover\">\r\n\t\t\t\t\tPortfolio\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto=\"https://adam-kindberg-shop-shopify.vercel.app\"\r\n\t\t\t\t\tclassName=\"link link-hover\"\r\n\t\t\t\t>\r\n\t\t\t\t\tShopify project\r\n\t\t\t\t</Link>\r\n\t\t\t</nav>\r\n\t\t\t<nav>\r\n\t\t\t\t<div className=\"grid grid-flow-col gap-4\">\r\n\t\t\t\t\t<Link to=\"https://www.linkedin.com/in/adam-kindberg/\">\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\tclassName=\"fill-white\"\r\n\t\t\t\t\t\t\twidth=\"24\"\r\n\t\t\t\t\t\t\theight=\"24\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\t\tfill=\"inherit\"\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\td=\"M19 0H5C2.239 0 0 2.239 0 5V19C0 21.761 2.239 24 5 24H19C21.762 24 24 21.761 24 19V5C24 2.239 21.762 0 19 0ZM8 19H5V8H8V19ZM6.5 6.732C5.534 6.732 4.75 5.942 4.75 4.968C4.75 3.994 5.534 3.204 6.5 3.204C7.466 3.204 8.25 3.994 8.25 4.968C8.25 5.942 7.467 6.732 6.5 6.732ZM20 19H17V13.396C17 10.028 13 10.283 13 13.396V19H10V8H13V9.765C14.396 7.179 20 6.988 20 12.241V19Z\"\r\n\t\t\t\t\t\t\t\tfill=\"inherit\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"https://github.com/WeeWee\">\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\tclassName=\"fill-white\"\r\n\t\t\t\t\t\t\twidth=\"24\"\r\n\t\t\t\t\t\t\theight=\"24\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\t\tfill=\"inherit\"\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\td=\"M12 0C5.374 0 0 5.50883 0 12.3034C0 17.7394 3.438 22.3511 8.207 23.9782C8.806 24.092 9 23.7106 9 23.3866V21.0962C5.662 21.8405 4.967 19.6444 4.967 19.6444C4.421 18.2223 3.634 17.844 3.634 17.844C2.545 17.0801 3.717 17.0965 3.717 17.0965C4.922 17.1827 5.556 18.3648 5.556 18.3648C6.626 20.2452 8.363 19.7018 9.048 19.387C9.155 18.5924 9.466 18.049 9.81 17.7425C7.145 17.4298 4.343 16.3748 4.343 11.6615C4.343 10.3174 4.812 9.22035 5.579 8.35911C5.455 8.04845 5.044 6.79658 5.696 5.10282C5.696 5.10282 6.704 4.77268 8.997 6.36391C9.954 6.09119 10.98 5.95483 12 5.9497C13.02 5.95483 14.047 6.09119 15.006 6.36391C17.297 4.77268 18.303 5.10282 18.303 5.10282C18.956 6.79761 18.545 8.04948 18.421 8.35911C19.191 9.22035 19.656 10.3184 19.656 11.6615C19.656 16.3871 16.849 17.4277 14.177 17.7322C14.607 18.1136 15 18.8621 15 20.0104V23.3866C15 23.7137 15.192 24.0982 15.801 23.9772C20.566 22.348 24 17.7374 24 12.3034C24 5.50883 18.627 0 12 0Z\"\r\n\t\t\t\t\t\t\t\tfill=\"inherit\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t\t<aside>\r\n\t\t\t\t<p>@Connect made by Adam Kindberg</p>\r\n\t\t\t</aside>\r\n\t\t</footer>\r\n\t);\r\n}\r\n", "import { createServerClient } from \"@supabase/auth-helpers-remix\";\r\nimport type { TComments, TPost, TPostData, TUser } from \"./../types\";\r\nimport type { PostgrestError } from \"@supabase/supabase-js\";\r\nimport { getUserById } from \"./auth.server\";\r\n\r\nconst supabaseUrl = process.env.SUPABASE_URL!;\r\nconst supabaseKey = process.env.SUPABASE_API_KEY!;\r\nconst supabase = (request: Request, response: Response) =>\r\n\tcreateServerClient(supabaseUrl, supabaseKey, { request, response });\r\n\r\nconst getPosts = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tuserId: string\r\n) => {\r\n\tconst { data: postsData, error: postsError } = await supabase(\r\n\t\trequest,\r\n\t\tresponse\r\n\t)\r\n\t\t.from(\"posts\")\r\n\t\t.select(\r\n\t\t\t`\r\n    id, title, image_bucket_id, image_name, created_at,\r\n    user:users(id, username, avatar_name, avatar_bucket_id),\r\n\tlikes:post_like(id, user:users!post_like_user_id_fkey(id, username))\r\n  `\r\n\t\t)\r\n\t\t.order(\"created_at\", { ascending: false })\r\n\t\t.returns<TPostData[]>();\r\n\r\n\tif (postsError) {\r\n\t\tconsole.error(postsError);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst { data: followedUsers, error: followedUsersError } = await supabase(\r\n\t\trequest,\r\n\t\tresponse\r\n\t)\r\n\t\t.from(\"followers\")\r\n\t\t.select(\"following_id\")\r\n\t\t.eq(\"follower_id\", userId);\r\n\r\n\tconst filteredPosts = postsData?.sort((a: TPostData, b: TPostData) => {\r\n\t\tconst isFollowedA = followedUsers?.some(\r\n\t\t\t(user) => user.following_id === a.user?.id\r\n\t\t);\r\n\t\tconst isFollowedB = followedUsers?.some(\r\n\t\t\t(user) => user.following_id === b.user?.id\r\n\t\t);\r\n\r\n\t\tif (isFollowedA && !isFollowedB) return -1;\r\n\t\tif (!isFollowedA && isFollowedB) return 1;\r\n\t\treturn b?.created_at?.localeCompare(a?.created_at as string) || 0;\r\n\t});\r\n\r\n\tif (followedUsersError) {\r\n\t\tconsole.error(followedUsersError);\r\n\t\treturn null;\r\n\t}\r\n\tconst postsWithImages = await Promise.all(\r\n\t\tfilteredPosts.map(async (post) => {\r\n\t\t\tconst image = getImage(request, response, post as TPostData);\r\n\t\t\tconst avatar = getAvatar(request, response, post.user!);\r\n\t\t\tconst { avatar_name, avatar_bucket_id, ...restUser } = post.user!;\r\n\t\t\tconst newUser = { avatar: avatar.data.publicUrl, ...restUser };\r\n\t\t\tconst { image_name, image_bucket_id, user, ...restPost } = post;\r\n\t\t\treturn { user: newUser, image: image.data.publicUrl, ...restPost };\r\n\t\t})\r\n\t);\r\n\tconsole.log(postsWithImages[0].likes);\r\n\treturn postsWithImages as TPost[];\r\n};\r\nconst getImage = (request: Request, response: Response, post: TPostData) => {\r\n\treturn supabase(request, response)\r\n\t\t.storage.from(post.image_bucket_id)\r\n\t\t.getPublicUrl(post.image_name);\r\n};\r\nconst getAvatar = (request: Request, response: Response, user: TUser) => {\r\n\treturn supabase(request, response)\r\n\t\t.storage.from(user.avatar_bucket_id!)\r\n\t\t.getPublicUrl(user.avatar_name!);\r\n};\r\nconst getComments = async (request: Request, response: Response) => {\r\n\tconst { data, error } = (await supabase(request, response)\r\n\t\t.from(\"post_comment\")\r\n\t\t.select(\r\n\t\t\t\"post_id, comment:comments!post_comment_comment_id_fkey(id,text,created_at), parent_comment:comments!post_comment_parent_comment_id_fkey(id, text, created_at), user:users!post_comment_user_id_fkey(id, username, avatar_name, avatar_bucket_id)\"\r\n\t\t)) as {\r\n\t\tdata: TComments[] | null;\r\n\t\terror: PostgrestError | null;\r\n\t};\r\n\tconsole.log(data);\r\n\tif (error) {\r\n\t\tconsole.error(\"get comments \", error);\r\n\t\treturn [];\r\n\t}\r\n\tconst commentsWithAvatar = await Promise.all(\r\n\t\t// @ts-ignore\r\n\t\tdata.map(async (comment) => {\r\n\t\t\tconst userAvatar = getAvatar(request, response, comment.user as TUser);\r\n\t\t\tconst { avatar_bucket_id, avatar_name, ...restUser } = comment.user;\r\n\t\t\treturn {\r\n\t\t\t\tuser: { avatar: userAvatar.data.publicUrl, ...restUser },\r\n\t\t\t\tparent_comment: comment.parent_comment,\r\n\t\t\t\tcomment: comment.comment,\r\n\t\t\t\tpost_id: comment.post_id,\r\n\t\t\t};\r\n\t\t})\r\n\t);\r\n\treturn commentsWithAvatar;\r\n};\r\nconst getPostsByUserId = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tid: string\r\n) => {\r\n\tconst { data, error } = await supabase(request, response)\r\n\t\t.from(\"posts\")\r\n\t\t.select(\r\n\t\t\t`id, title, image_name, image_bucket_id, created_at, user:users!inner(id, username),likes:post_like(id, user:users!post_like_user_id_fkey(id, username, avatar_name, avatar_bucket_id)), comments:post_comment(id)`\r\n\t\t)\r\n\t\t.eq(\"user.id\", id);\r\n\r\n\tif (error) {\r\n\t\tconsole.error(\"post by user id \", error);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst postsWithImages = await Promise.all(\r\n\t\t// @ts-ignore\r\n\t\tdata.map(async (post: TPostData) => {\r\n\t\t\tconst image = getImage(request, response, post);\r\n\r\n\t\t\tconst { created_at, image_bucket_id, image_name, ...restPost } = post;\r\n\r\n\t\t\treturn { ...restPost, image: image.data.publicUrl };\r\n\t\t})\r\n\t);\r\n\r\n\treturn postsWithImages;\r\n};\r\nconst getPostById = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tid: string\r\n) => {\r\n\tconst {\r\n\t\tdata,\r\n\t\terror,\r\n\t}: { data: TPostData | null; error: PostgrestError | null } = await supabase(\r\n\t\trequest,\r\n\t\tresponse\r\n\t)\r\n\t\t.from(\"posts\")\r\n\t\t.select(\r\n\t\t\t`id, title, image_name, image_bucket_id, created_at, user:users!inner(id, username, avatar_bucket_id, avatar_name), likes:post_like(id, user:users!post_like_user_id_fkey(id, username, avatar_name, avatar_bucket_id))`\r\n\t\t)\r\n\t\t.eq(\"id\", id)\r\n\t\t.single();\r\n\tif (error) {\r\n\t\tconsole.error(\"post by id \", error);\r\n\t\treturn null;\r\n\t}\r\n\tconst image = getImage(request, response, data!);\r\n\r\n\tconst { image_bucket_id, image_name, user, ...restPost } = data!;\r\n\tconst userWAvatar = await getUserById(request, response, user?.id as string);\r\n\treturn {\r\n\t\tuser: userWAvatar?.user,\r\n\t\t...restPost,\r\n\t\timage: image.data.publicUrl,\r\n\t} as TPost;\r\n};\r\nconst getCommentsByPostId = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tpost_id: string\r\n) => {\r\n\tconst { data, error } = (await supabase(request, response)\r\n\t\t.from(\"post_comment\")\r\n\t\t.select(\r\n\t\t\t\"comment:comments!post_comment_comment_id_fkey(id,text,created_at), parent_comment:comments!post_comment_parent_comment_id_fkey(id, text, created_at), user:users!post_comment_user_id_fkey(id, username, avatar_name, avatar_bucket_id)\"\r\n\t\t)\r\n\t\t.eq(\"post_id\", post_id)) as {\r\n\t\tdata: TComments[] | null;\r\n\t\terror: PostgrestError | null;\r\n\t};\r\n\tif (error) {\r\n\t\tconsole.error(error);\r\n\t\treturn null;\r\n\t}\r\n\tconst commentsWithAvatar = await Promise.all(\r\n\t\t// @ts-ignore\r\n\t\tdata.map(async (comment) => {\r\n\t\t\tconst userAvatar = getAvatar(request, response, comment.user as TUser);\r\n\t\t\tconst { avatar_bucket_id, avatar_name, ...restUser } = comment.user;\r\n\t\t\treturn {\r\n\t\t\t\tuser: { avatar: userAvatar.data.publicUrl, ...restUser },\r\n\t\t\t\tparent_comment: comment.parent_comment,\r\n\t\t\t\tcomment: comment.comment,\r\n\t\t\t};\r\n\t\t})\r\n\t);\r\n\treturn commentsWithAvatar;\r\n};\r\nconst likePost = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tuser_id: string,\r\n\tpost_to_like_id: string\r\n) => {\r\n\tconst isPostLiked = await hasLikedPost(\r\n\t\trequest,\r\n\t\tresponse,\r\n\t\tuser_id,\r\n\t\tpost_to_like_id\r\n\t);\r\n\tif (!isPostLiked) {\r\n\t\tconst likepost = await supabase(request, response)\r\n\t\t\t.from(\"post_like\")\r\n\t\t\t.insert({ user_id, post_id: post_to_like_id })\r\n\t\t\t.select();\r\n\t\tif (likepost.error) {\r\n\t\t\tconsole.error(\"like post \", likepost.error);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\nconst unLikePost = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tuser_id: string,\r\n\tpost_to_remove_id: string\r\n) => {\r\n\tconst removeLike = await supabase(request, response)\r\n\t\t.from(\"post_like\")\r\n\t\t.delete()\r\n\t\t.eq(\"user_id\", user_id)\r\n\t\t.eq(\"post_id\", post_to_remove_id)\r\n\t\t.select();\r\n\tif (removeLike.error) {\r\n\t\tconsole.error(\"remove like \", removeLike.error);\r\n\t}\r\n\r\n\treturn null;\r\n};\r\nconst hasLikedPost = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tuser_id: string,\r\n\tliked_post_id: string\r\n) => {\r\n\tconst isPostLiked = await supabase(request, response)\r\n\t\t.from(\"post_like\")\r\n\t\t.select()\r\n\t\t.eq(\"user_id\", user_id)\r\n\t\t.eq(\"post_id\", liked_post_id);\r\n\treturn isPostLiked.data && isPostLiked.data.length > 0;\r\n};\r\nconst followUser = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tuser_id: string,\r\n\tuser_to_follow_id: string\r\n) => {\r\n\tconst follower = await supabase(request, response)\r\n\t\t.from(\"followers\")\r\n\t\t.insert({ follower_id: user_id, following_id: user_to_follow_id })\r\n\t\t.select();\r\n\r\n\tif (follower.error) {\r\n\t\tconsole.error(\"follow user \", follower.error);\r\n\t\treturn null;\r\n\t}\r\n\treturn null;\r\n};\r\nconst unfollowUser = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tuser_id: string,\r\n\tuser_to_unfollow_id: string\r\n) => {\r\n\tconst follower = await supabase(request, response)\r\n\t\t.from(\"followers\")\r\n\t\t.delete()\r\n\t\t.eq(\"follower_id\", user_id)\r\n\t\t.eq(\"following_id\", user_to_unfollow_id)\r\n\t\t.select();\r\n\tif (follower.error) {\r\n\t\tconsole.error(\"unfollow user \", follower.error);\r\n\t\treturn null;\r\n\t}\r\n\treturn null;\r\n};\r\nconst isFollowing = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tuser_id: string,\r\n\ttarget_user_id: string\r\n) => {\r\n\tconst { data, error } = await supabase(request, response)\r\n\t\t.from(\"followers\")\r\n\t\t.select(\"*\")\r\n\t\t.eq(\"follower_id\", user_id)\r\n\t\t.eq(\"following_id\", target_user_id);\r\n\tif (error) {\r\n\t\tconsole.error(\"is following \", error);\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn data.length > 0 ? true : false;\r\n};\r\nconst addPost = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\timage: File,\r\n\ttitle: string,\r\n\tuser_id: string\r\n) => {\r\n\tconst { error } = await supabase(request, response)\r\n\t\t.storage.from(\"images\")\r\n\t\t.download(image.name);\r\n\r\n\tlet uploadedImage;\r\n\r\n\tif (error) {\r\n\t\t// The image doesn't exist, so upload the new image\r\n\t\tuploadedImage = await supabase(request, response)\r\n\t\t\t.storage.from(\"images\")\r\n\t\t\t.upload(image.name, image);\r\n\r\n\t\tif (uploadedImage.error) {\r\n\t\t\tconsole.error(uploadedImage.error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t// Use the appropriate image path\r\n\tconst finalImagePath = uploadedImage ? uploadedImage.data.path : image.name;\r\n\tconst post = await supabase(request, response)\r\n\t\t.from(\"posts\")\r\n\t\t.insert({\r\n\t\t\ttitle,\r\n\t\t\timage_bucket_id: \"images\",\r\n\t\t\timage_name: finalImagePath,\r\n\t\t\tuser_id,\r\n\t\t})\r\n\t\t.select()\r\n\t\t.single();\r\n\tif (post.error) {\r\n\t\tconsole.error(post.error);\r\n\t\treturn null;\r\n\t}\r\n\treturn post.data as TPost;\r\n};\r\nconst addComment = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\ttext: string,\r\n\tpost_id: string,\r\n\r\n\tparent_comment_id: string | null,\r\n\tuser_id: string\r\n) => {\r\n\tconst { data, error } = await supabase(request, response)\r\n\t\t.from(\"comments\")\r\n\t\t.insert({ text })\r\n\t\t.select(\"id\")\r\n\t\t.single();\r\n\tif (error) {\r\n\t\tconsole.error(error);\r\n\t\treturn null;\r\n\t}\r\n\tconst postComment = await supabase(request, response)\r\n\t\t.from(\"post_comment\")\r\n\t\t.insert({ post_id, comment_id: data.id, parent_comment_id, user_id })\r\n\t\t.select()\r\n\t\t.single();\r\n\tif (postComment.error) {\r\n\t\tconsole.error(error);\r\n\t\treturn null;\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport {\r\n\tsupabase,\r\n\tgetPosts,\r\n\tgetPostById,\r\n\taddPost,\r\n\tgetPostsByUserId,\r\n\tgetCommentsByPostId,\r\n\tgetComments,\r\n\tgetImage,\r\n\tgetAvatar,\r\n\tfollowUser,\r\n\tunfollowUser,\r\n\tisFollowing,\r\n\taddComment,\r\n\tlikePost,\r\n\thasLikedPost,\r\n\tunLikePost,\r\n};\r\n", "import { type PostgrestError, type Provider } from \"@supabase/supabase-js\";\r\nimport { getAvatar, getPostsByUserId, supabase } from \"./database.server\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport type { TFollow, TUser } from \"~/types\";\r\nconst getSession = async (request: Request, response: Response) => {\r\n\tconst session = await supabase(request, response).auth.getSession();\r\n\tif (session.error) {\r\n\t\tconsole.error(session.error);\r\n\t\treturn null;\r\n\t}\r\n\treturn session.data.session;\r\n};\r\nconst isAuthenticated = async (request: Request, response: Response) => {\r\n\tconst session = await getSession(request, response);\r\n\tif (!session?.user) return redirect(\"/login\", { headers: response.headers });\r\n\treturn json(session.user, { headers: response.headers });\r\n};\r\nconst getUserById = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tid: string\r\n) => {\r\n\tconst { data, error }: { data: TUser | null; error: PostgrestError | null } =\r\n\t\tawait supabase(request, response)\r\n\t\t\t.from(\"users\")\r\n\t\t\t.select(`*`)\r\n\t\t\t.eq(\"id\", id)\r\n\t\t\t.single();\r\n\r\n\tif (error) {\r\n\t\tconsole.error(\"get user by id error \", error);\r\n\t\treturn null;\r\n\t}\r\n\tconst followersData = await supabase(request, response)\r\n\t\t.from(\"followers\")\r\n\t\t.select(`id, user:users!followers_follower_id_fkey(*)`)\r\n\t\t.eq(\"following_id\", id);\r\n\tconst followingData = await supabase(request, response)\r\n\t\t.from(\"followers\")\r\n\t\t.select(`id, user:users!followers_following_id_fkey(*)`)\r\n\t\t.eq(\"follower_id\", id);\r\n\tif (followersData.error) {\r\n\t\tconsole.error(followersData.error);\r\n\t\treturn null;\r\n\t}\r\n\tif (followingData.error) {\r\n\t\tconsole.error(followingData.error);\r\n\t\treturn null;\r\n\t}\r\n\tconst avatar = getAvatar(request, response, data!);\r\n\tconst posts = await getPostsByUserId(request, response, data?.id as string);\r\n\treturn {\r\n\t\tuser: {\r\n\t\t\t...data,\r\n\t\t\tfollowing: followingData.data as TFollow[],\r\n\t\t\tfollowers: followersData.data as TFollow[],\r\n\t\t\tavatar: avatar.data.publicUrl,\r\n\t\t},\r\n\t\tposts,\r\n\t};\r\n};\r\nconst getUser = async (request: Request, response: Response) => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { user },\r\n\t\t\terror,\r\n\t\t} = await supabase(request, response).auth.getUser();\r\n\r\n\t\tif (error) {\r\n\t\t\tconsole.error(\"get user error \", error);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn await getUserById(request, response, user?.id as string);\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn null;\r\n\t}\r\n};\r\nconst getUserId = async (request: Request, response: Response) => {\r\n\tconst { data, error } = await supabase(request, response).auth.getSession();\r\n\tif (error) {\r\n\t\tconsole.error(error);\r\n\t\treturn null;\r\n\t}\r\n\treturn data.session?.user.id;\r\n};\r\nconst getUserByUsername = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tusername: string\r\n) => {\r\n\tconst { data, error }: { data: TUser | null; error: PostgrestError | null } =\r\n\t\tawait supabase(request, response)\r\n\t\t\t.from(\"users\")\r\n\t\t\t.select(`*`)\r\n\t\t\t.eq(\"username\", username)\r\n\t\t\t.single();\r\n\tif (error) {\r\n\t\tconsole.error(\"user error username \", error);\r\n\t\treturn null;\r\n\t}\r\n\tconst followersData = await supabase(request, response)\r\n\t\t.from(\"followers\")\r\n\t\t.select(`user:users!followers_follower_id_fkey(*)`)\r\n\t\t.eq(\"following_id\", data?.id);\r\n\r\n\tconst followingData = await supabase(request, response)\r\n\t\t.from(\"followers\")\r\n\t\t.select(`user:users!followers_following_id_fkey(*)`)\r\n\t\t.eq(\"follower_id\", data?.id);\r\n\tif (followersData.error) {\r\n\t\tconsole.error(followersData.error);\r\n\t\treturn null;\r\n\t}\r\n\tif (followingData.error) {\r\n\t\tconsole.error(followingData.error);\r\n\t\treturn null;\r\n\t}\r\n\tconst avatar = getAvatar(request, response, data!);\r\n\tconst posts = await getPostsByUserId(request, response, data?.id as string);\r\n\treturn {\r\n\t\tuser: {\r\n\t\t\t...data,\r\n\t\t\tfollowing: followingData.data,\r\n\t\t\tfollowers: followersData.data,\r\n\t\t\tavatar: avatar.data.publicUrl,\r\n\t\t},\r\n\t\tposts,\r\n\t};\r\n};\r\nconst signUp = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\temail: string,\r\n\tpassword: string,\r\n\tphone: string,\r\n\tusername: string,\r\n\tfirst_name: string,\r\n\tlast_name: string,\r\n\timage: File\r\n) => {\r\n\tconst uploadedAvatar = await supabase(request, response)\r\n\t\t.storage.from(\"avatars\")\r\n\t\t.upload(image.name, image);\r\n\tif (uploadedAvatar.error) {\r\n\t\tconsole.error(\"upload avatar \", uploadedAvatar.error);\r\n\t\treturn null;\r\n\t}\r\n\tconst { data, error } = await supabase(request, response).auth.signUp({\r\n\t\temail,\r\n\t\tpassword,\r\n\t\tphone,\r\n\t\toptions: {\r\n\t\t\tdata: {\r\n\t\t\t\tusername,\r\n\t\t\t\tfirst_name,\r\n\t\t\t\tlast_name,\r\n\t\t\t\tavatar_bucket_id: \"avatars\",\r\n\t\t\t\tavatar_name: uploadedAvatar.data.path,\r\n\t\t\t},\r\n\t\t\temailRedirectTo:\r\n\t\t\t\t(process.env.NEXT_PUBLIC_VERCEL_URL ?? \"http://localhost:3000/\") +\r\n\t\t\t\t\"login?email_confirmed=true\",\r\n\t\t},\r\n\t});\r\n\tif (error) {\r\n\t\tconsole.error(\"signup error \", error);\r\n\t\treturn null;\r\n\t}\r\n\treturn json(\r\n\t\t{ user: data.user, session: data.session },\r\n\t\t{ headers: response.headers }\r\n\t);\r\n};\r\nconst Logout = async (request: Request, response: Response) => {\r\n\ttry {\r\n\t\tawait supabase(request, response).auth.signOut();\r\n\t\treturn redirect(\"/\", { headers: response.headers });\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn null;\r\n\t}\r\n};\r\nconst LoginWPassword = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\temail: string,\r\n\tpassword: string\r\n) => {\r\n\ttry {\r\n\t\tconst { data, error } = await supabase(\r\n\t\t\trequest,\r\n\t\t\tresponse\r\n\t\t).auth.signInWithPassword({\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t});\r\n\t\tif (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treturn json(error.message);\r\n\t\t}\r\n\t\tconst userData = await getUserById(request, response, data.user.id);\r\n\t\treturn redirect(`/user/${userData?.user.username}`, {\r\n\t\t\theaders: response.headers,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn null;\r\n\t}\r\n};\r\nconst LoginOAuth = async (\r\n\trequest: Request,\r\n\tresponse: Response,\r\n\tprovider: Provider\r\n) => {\r\n\tconst { data, error } = await supabase(\r\n\t\trequest,\r\n\t\tresponse\r\n\t).auth.signInWithOAuth({\r\n\t\tprovider: provider,\r\n\t\toptions: { redirectTo: \"http://localhost:3000/auth/callback\" },\r\n\t});\r\n\tif (error) {\r\n\t\tconsole.error(\"login oauth error \", error);\r\n\r\n\t\treturn json(error);\r\n\t}\r\n\treturn redirect(data.url, { headers: response.headers });\r\n\treturn null;\r\n};\r\nexport {\r\n\tsignUp,\r\n\tgetSession,\r\n\tLoginWPassword,\r\n\tLoginOAuth,\r\n\tisAuthenticated,\r\n\tLogout,\r\n\tgetUserByUsername,\r\n\tgetUser,\r\n\tgetUserId,\r\n\tgetUserById,\r\n};\r\n", "import {\r\n\ttype ActionFunctionArgs,\r\n\tjson,\r\n\ttype LoaderFunctionArgs,\r\n\tredirect,\r\n} from \"@remix-run/node\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\nimport { ProfileCard } from \"~/components\";\r\nimport { getUser, getUserByUsername } from \"~/lib/auth.server\";\r\nimport {\r\n\taddComment,\r\n\tfollowUser,\r\n\tisFollowing,\r\n\tunfollowUser,\r\n} from \"~/lib/database.server\";\r\nimport cn from \"classnames\";\r\nimport type { TPost } from \"~/types\";\r\nexport const loader = async ({ request, params }: LoaderFunctionArgs) => {\r\n\tconst { username } = params;\r\n\tconst response = new Response();\r\n\tconst currentUser = await getUser(request, response);\r\n\tif (!currentUser?.user) return redirect(\"/login\");\r\n\tconsole.log(username);\r\n\tconst userData = await getUserByUsername(request, response, username!);\r\n\tconst is_following = await isFollowing(\r\n\t\trequest,\r\n\t\tresponse,\r\n\t\tcurrentUser?.user.id as string,\r\n\t\tuserData?.user.id as string\r\n\t);\r\n\treturn json(\r\n\t\t{\r\n\t\t\tcurrentUser: currentUser?.user,\r\n\t\t\tis_following,\r\n\t\t\tuser: userData?.user,\r\n\t\t\tposts: userData?.posts,\r\n\t\t},\r\n\t\t{ headers: response.headers }\r\n\t);\r\n};\r\nexport const action = async ({ request, params }: ActionFunctionArgs) => {\r\n\tconst { username } = params;\r\n\tconst response = new Response();\r\n\tconst currentUser = await getUser(request, response);\r\n\tconst userToFollow = await getUserByUsername(request, response, username!);\r\n\tconst formData = await request.formData();\r\n\tconst _action = formData.get(\"_action\");\r\n\tconsole.log(_action);\r\n\tif (_action === \"follow\") {\r\n\t\tawait followUser(\r\n\t\t\trequest,\r\n\t\t\tresponse,\r\n\t\t\tcurrentUser?.user.id as string,\r\n\t\t\tuserToFollow?.user.id as string\r\n\t\t);\r\n\t}\r\n\tif (_action === \"unfollow\") {\r\n\t\tawait unfollowUser(\r\n\t\t\trequest,\r\n\t\t\tresponse,\r\n\t\t\tcurrentUser?.user.id as string,\r\n\t\t\tuserToFollow?.user.id as string\r\n\t\t);\r\n\t}\r\n\tif (_action === \"comment\") {\r\n\t\tawait addComment(\r\n\t\t\trequest,\r\n\t\t\tresponse,\r\n\t\t\t\"test\",\r\n\t\t\tformData.get(\"post_id\") as string,\r\n\t\t\tnull,\r\n\t\t\tcurrentUser?.user.id as string\r\n\t\t);\r\n\t}\r\n\treturn json(null, { headers: response.headers });\r\n};\r\nexport default function User() {\r\n\tconst { currentUser, user, posts, is_following } =\r\n\t\tuseLoaderData<typeof loader>();\r\n\r\n\treturn (\r\n\t\t<div className=\"flex flex-col w-full\">\r\n\t\t\t<section className=\"flex gap-24 \">\r\n\t\t\t\t{user?.avatar_name ? (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={user?.avatar}\r\n\t\t\t\t\t\talt={user?.username}\r\n\t\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\t\tclassName=\"rounded-full object-cover h-48 w-48\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"avatar placeholder\">\r\n\t\t\t\t\t\t<div className=\"bg-neutral-focus text-neutral-content rounded-full w-32 \">\r\n\t\t\t\t\t\t\t<span className=\"text-4xl capitalize\">\r\n\t\t\t\t\t\t\t\t{user?.username?.charAt(0)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className=\"flex flex-col gap-4\">\r\n\t\t\t\t\t<div className=\"flex gap-4 items-center text-center\">\r\n\t\t\t\t\t\t<h1 className=\"text-2xl \">{user?.username}</h1>\r\n\t\t\t\t\t\t{currentUser?.id === user?.id && (\r\n\t\t\t\t\t\t\t<button className=\"btn btn-outline btn-sm\">Edit Profile</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"flex gap-4\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span className=\"font-semibold\">{posts?.length}</span> posts\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span className=\"font-semibold\">{user?.followers?.length}</span>{\" \"}\r\n\t\t\t\t\t\t\tfollowers\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span className=\"font-semibold\">{user?.following.length}</span>{\" \"}\r\n\t\t\t\t\t\t\tfollowing\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"font-semibold capitalize\">\r\n\t\t\t\t\t\t{user?.first_name} {user?.last_name}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t{currentUser?.id !== user?.id && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Form method=\"post\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tname=\"_action\"\r\n\t\t\t\t\t\t\t\t\tvalue={!is_following ? \"follow\" : \"unfollow\"}\r\n\t\t\t\t\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t\t\t\t\t{ \"rounded-md px-4 p-2  text-white\": true },\r\n\t\t\t\t\t\t\t\t\t\t{ \"bg-blue-400\": !is_following },\r\n\t\t\t\t\t\t\t\t\t\t{ \"bg-red-400\": is_following }\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{!is_following ? \"Follow\" : \"Unfollow\"}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<div className=\"divider\"></div>\r\n\t\t\t<div className=\"\">\r\n\t\t\t\t<div className=\" grid grid-cols-3 gap-4 mx-auto\">\r\n\t\t\t\t\t{posts && user ? (\r\n\t\t\t\t\t\tposts?.map((post) => (\r\n\t\t\t\t\t\t\t<ProfileCard key={post.id} post={post as TPost} />\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>User could not be found.</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import { redirect } from \"@remix-run/node\";\r\nimport { createServerClient } from \"@supabase/auth-helpers-remix\";\r\nimport type { LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { supabase } from \"~/lib/database.server\";\r\nimport { getUser } from \"~/lib/auth.server\";\r\n\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n\tconst response = new Response();\r\n\tconst url = new URL(request.url);\r\n\tconst code = url.searchParams.get(\"code\");\r\n\r\n\tif (code) {\r\n\t\tawait supabase(request, response).auth.exchangeCodeForSession(code);\r\n\t\tconst data = await getUser(request, response);\r\n\t\treturn redirect(`/user/${data?.user.username}`, {\r\n\t\t\theaders: response.headers,\r\n\t\t});\r\n\t}\r\n};\r\n", "import {\r\n\tActionFunctionArgs,\r\n\tjson,\r\n\tredirect,\r\n\ttype LoaderFunctionArgs,\r\n} from \"@remix-run/node\";\r\nimport { type MetaFunction, useLoaderData } from \"@remix-run/react\";\r\nimport { PostCard } from \"~/components\";\r\nimport { getUser } from \"~/lib/auth.server\";\r\nimport {\r\n\taddComment,\r\n\tgetCommentsByPostId,\r\n\tgetPostById,\r\n\thasLikedPost,\r\n\tlikePost,\r\n\tunLikePost,\r\n} from \"~/lib/database.server\";\r\nimport type { TComments, TPost, TUser } from \"~/types\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n\treturn [\r\n\t\t{ title: \"New Remix App\" },\r\n\t\t{ name: \"description\", content: \"Welcome to Remix!\" },\r\n\t];\r\n};\r\nexport async function loader({ request, params }: LoaderFunctionArgs) {\r\n\tconst { postid } = params;\r\n\tconst response = new Response();\r\n\tconst currentUser = (await getUser(request, response))?.user;\r\n\tif (!currentUser) return redirect(\"/login\");\r\n\tconst post = await getPostById(request, response, postid as string);\r\n\tconst comments = await getCommentsByPostId(\r\n\t\trequest,\r\n\t\tresponse,\r\n\t\tpostid as string\r\n\t);\r\n\treturn json(\r\n\t\t{\r\n\t\t\tcurrentUser,\r\n\t\t\tpost,\r\n\t\t\tcomments,\r\n\t\t\tsupabase_url: process.env.SUPABASE_URL!,\r\n\t\t\tsupabase_api_key: process.env.SUPABASE_API_KEY!,\r\n\t\t},\r\n\t\t{ headers: response.headers }\r\n\t);\r\n}\r\n\r\nexport async function action({ request }: ActionFunctionArgs) {\r\n\tconst response = new Response();\r\n\tconst formData = await request.formData();\r\n\tconst _action = formData.get(\"_action\");\r\n\tconst parentId = formData.get(\"parent_id\") as string;\r\n\tconst comment = formData.get(\"comment\") as string;\r\n\tconst currentUser = (await getUser(request, response))?.user;\r\n\tif (_action === \"comment\") {\r\n\t\tawait addComment(\r\n\t\t\trequest,\r\n\t\t\tresponse,\r\n\t\t\tcomment as string,\r\n\t\t\tformData.get(\"post_id\") as string,\r\n\t\t\tparentId.length > 0 ? parentId : null,\r\n\t\t\tcurrentUser?.id as string\r\n\t\t);\r\n\t}\r\n\tif (_action === \"like\") {\r\n\t\tconst hasLiked = await hasLikedPost(\r\n\t\t\trequest,\r\n\t\t\tresponse,\r\n\t\t\tcurrentUser?.id as string,\r\n\t\t\tformData.get(\"post_id\") as string\r\n\t\t);\r\n\t\tif (hasLiked) {\r\n\t\t\tawait unLikePost(\r\n\t\t\t\trequest,\r\n\t\t\t\tresponse,\r\n\t\t\t\tcurrentUser?.id as string,\r\n\t\t\t\tformData.get(\"post_id\") as string\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tawait likePost(\r\n\t\t\t\trequest,\r\n\t\t\t\tresponse,\r\n\t\t\t\tcurrentUser?.id as string,\r\n\t\t\t\tformData.get(\"post_id\") as string\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn json(null, { headers: response.headers });\r\n}\r\nexport default function Post() {\r\n\tconst { currentUser, post, comments } = useLoaderData<typeof loader>();\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{post ? (\r\n\t\t\t\t<PostCard\r\n\t\t\t\t\tcurrentUser={currentUser as TUser}\r\n\t\t\t\t\tpost={post as TPost}\r\n\t\t\t\t\tcomments={comments as TComments[]}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<h1>Post could not be found</h1>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import type { ActionFunctionArgs } from \"@remix-run/node\";\r\nimport { Logout } from \"~/lib/auth.server\";\r\n\r\nexport const action = async ({ request }: ActionFunctionArgs) => {\r\n\tconst response = new Response();\r\n\tconsole.log(\"logout \");\r\n\treturn await Logout(request, response);\r\n};\r\n\r\nexport default function LogoutRoute() {\r\n\treturn <div></div>;\r\n}\r\n", "import { useActionData } from \"@remix-run/react\";\r\nimport {\r\n\tunstable_createMemoryUploadHandler,\r\n\tunstable_parseMultipartFormData,\r\n\ttype ActionFunctionArgs,\r\n} from \"@remix-run/node\";\r\nimport { signUp } from \"~/lib/auth.server\";\r\nimport {\r\n\tButton,\r\n\tButtonType,\r\n\tFormComponent,\r\n\tInputComponent,\r\n} from \"~/components\";\r\nexport async function action({ request }: ActionFunctionArgs) {\r\n\tconst uploadHandler = unstable_createMemoryUploadHandler();\r\n\tconst formData = await unstable_parseMultipartFormData(\r\n\t\trequest,\r\n\t\tuploadHandler\r\n\t);\r\n\tconst response = new Response();\r\n\treturn await signUp(\r\n\t\trequest,\r\n\t\tresponse,\r\n\t\tformData.get(\"email\") as string,\r\n\t\tformData.get(\"password\") as string,\r\n\t\tformData.get(\"phone\") as string,\r\n\t\tformData.get(\"username\") as string,\r\n\t\tformData.get(\"firstname\") as string,\r\n\t\tformData.get(\"lastname\") as string,\r\n\t\tformData.get(\"image\") as File\r\n\t);\r\n}\r\nexport default function Signup() {\r\n\tconst actionData = useActionData<typeof action>();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FormComponent method=\"post\" encType=\"multipart/form-data\">\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\taccept=\"image/png, image/jpeg\"\r\n\t\t\t\t/>\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\tclassName=\"w-4 h-4 opacity-70\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6ZM12.735 14c.618 0 1.093-.561.872-1.139a6.002 6.002 0 0 0-11.215 0c-.22.578.254 1.139.872 1.139h9.47Z\" />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t/>\r\n\t\t\t\t<InputComponent name=\"firstname\" placeholder=\"First name\" />\r\n\t\t\t\t<InputComponent name=\"lastname\" placeholder=\"Last name\" />\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\tclassName=\"w-4 h-4 opacity-70\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path d=\"M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z\" />\r\n\t\t\t\t\t\t\t<path d=\"M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z\" />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\tclassName=\"w-4 h-4 opacity-70\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\tfillRule=\"evenodd\"\r\n\t\t\t\t\t\t\t\td=\"M1.5 4.5a3 3 0 0 1 3-3h1.372c.86 0 1.61.586 1.819 1.42l1.105 4.423a1.875 1.875 0 0 1-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285 0 0 0 6.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 0 1 1.955-.694l4.423 1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 0 1-3 3h-2.25C8.552 22.5 1.5 15.448 1.5 6.75V4.5Z\"\r\n\t\t\t\t\t\t\t\tclipRule=\"evenodd\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\tplaceholder=\"Phone\"\r\n\t\t\t\t/>\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\tclassName=\"w-4 h-4 opacity-70\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\tfillRule=\"evenodd\"\r\n\t\t\t\t\t\t\t\td=\"M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z\"\r\n\t\t\t\t\t\t\t\tclipRule=\"evenodd\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Button buttonType={ButtonType.Accent}>Signup</Button>\r\n\t\t\t\t{actionData?.user?.confirmation_sent_at && (\r\n\t\t\t\t\t<p>Email Confirmation sent to {actionData?.user.email}</p>\r\n\t\t\t\t)}\r\n\t\t\t</FormComponent>\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import {\r\n\ttype MetaFunction,\r\n\ttype LoaderFunction,\r\n\ttype ActionFunction,\r\n\tunstable_createMemoryUploadHandler,\r\n\tunstable_parseMultipartFormData,\r\n\tjson,\r\n\tredirect,\r\n} from \"@remix-run/node\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\nimport { Card } from \"~/components\";\r\nimport { getUser, getUserId } from \"~/lib/auth.server\";\r\nimport {\r\n\taddComment,\r\n\taddPost,\r\n\tgetComments,\r\n\tgetPosts,\r\n\thasLikedPost,\r\n\tlikePost,\r\n\tunLikePost,\r\n} from \"~/lib/database.server\";\r\nimport type { TComments, TPost, TUser } from \"~/types\";\r\n\r\nexport const meta: MetaFunction<typeof loader> = ({ data }) => {\r\n\treturn [\r\n\t\t{\r\n\t\t\ttitle: data.user\r\n\t\t\t\t? data.posts.length > 0\r\n\t\t\t\t\t? `@Connect | ${data.posts.length} post(s)`\r\n\t\t\t\t\t: `@Connect | No posts yet`\r\n\t\t\t\t: \"@Connect | Login to view posts\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"description\",\r\n\t\t\tcontent: \"Welcome to @Connect, a social media platform built for you.\",\r\n\t\t},\r\n\t];\r\n};\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n\tconst response = new Response();\r\n\tconst data = await getUser(request, response);\r\n\tif (!data?.user) return redirect(\"/login\");\r\n\tconst posts = await getPosts(request, response, data.user?.id as string);\r\n\tconst comments = await getComments(request, response);\r\n\treturn { user: data.user, posts, comments };\r\n};\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\tconst uploadHandler = unstable_createMemoryUploadHandler();\r\n\tconst formData = await unstable_parseMultipartFormData(\r\n\t\trequest,\r\n\t\tuploadHandler\r\n\t);\r\n\tconst _action = formData.get(\"_action\");\r\n\tconst response = new Response();\r\n\tconst currentUser = await getUser(request, response);\r\n\tif (_action === \"addPost\") {\r\n\t\tconst image = formData.get(\"image\") as File;\r\n\t\tconst title = formData.get(\"title\") as string;\r\n\t\tconst userId = await getUserId(request, response);\r\n\t\tawait addPost(request, response, image, title, userId!);\r\n\t\treturn json(null, { headers: response.headers });\r\n\t}\r\n\tif (_action === \"comment\") {\r\n\t\tawait addComment(\r\n\t\t\trequest,\r\n\t\t\tresponse,\r\n\t\t\t\"test\",\r\n\t\t\tformData.get(\"post_id\") as string,\r\n\t\t\tnull,\r\n\t\t\tcurrentUser?.user.id as string\r\n\t\t);\r\n\t\treturn json(null, { headers: response.headers });\r\n\t}\r\n\tif (_action === \"like\") {\r\n\t\tconst hasLiked = await hasLikedPost(\r\n\t\t\trequest,\r\n\t\t\tresponse,\r\n\t\t\tcurrentUser?.user.id as string,\r\n\t\t\tformData.get(\"post_id\") as string\r\n\t\t);\r\n\t\tif (hasLiked) {\r\n\t\t\tawait unLikePost(\r\n\t\t\t\trequest,\r\n\t\t\t\tresponse,\r\n\t\t\t\tcurrentUser?.user.id as string,\r\n\t\t\t\tformData.get(\"post_id\") as string\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tawait likePost(\r\n\t\t\t\trequest,\r\n\t\t\t\tresponse,\r\n\t\t\t\tcurrentUser?.user.id as string,\r\n\t\t\t\tformData.get(\"post_id\") as string\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn json(null, { headers: response.headers });\r\n\t}\r\n};\r\nexport default function Index() {\r\n\tconst { user, posts, comments } = useLoaderData() as {\r\n\t\tuser: TUser;\r\n\t\tposts: TPost[];\r\n\t\tcomments: TComments[];\r\n\t};\r\n\tconsole.log(posts);\r\n\treturn (\r\n\t\t<div className=\" \">\r\n\t\t\t<div className=\"grid max-w-lg mx-auto\">\r\n\t\t\t\t{posts &&\r\n\t\t\t\t\tposts.map((post) => {\r\n\t\t\t\t\t\tif (post?.user)\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\tpost={post}\r\n\t\t\t\t\t\t\t\t\tlink\r\n\t\t\t\t\t\t\t\t\thref={`/user/${post.user.username}`}\r\n\t\t\t\t\t\t\t\t\tkey={post.id}\r\n\t\t\t\t\t\t\t\t\tcurrentUser={user}\r\n\t\t\t\t\t\t\t\t\tcomments={comments}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\telse return <div key={post.id}></div>;\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n", "import type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\r\nimport {\r\n\tButton,\r\n\tButtonType,\r\n\tFormComponent,\r\n\tInputComponent,\r\n} from \"~/components\";\r\nimport { LoginOAuth, LoginWPassword } from \"~/lib/auth.server\";\r\nexport async function action({ request }: ActionFunctionArgs) {\r\n\tconst formData = await request.formData();\r\n\tconst _action = formData.get(\"_action\");\r\n\tconst response = new Response();\r\n\r\n\tif (_action === \"email\") {\r\n\t\tconsole.log(\"email action\");\r\n\t\treturn await LoginWPassword(\r\n\t\t\trequest,\r\n\t\t\tresponse,\r\n\t\t\tformData.get(\"email\") as string,\r\n\t\t\tformData.get(\"password\") as string\r\n\t\t);\r\n\t}\r\n\tif (_action === \"google\") {\r\n\t\tconsole.log(\"google action\");\r\n\t\treturn await LoginOAuth(request, response, \"google\");\r\n\t}\r\n}\r\nexport async function loader({ request }: LoaderFunctionArgs) {\r\n\tconst url = new URL(request.url);\r\n\tconst email_confirmed = url.searchParams.get(\"email_confirmed\");\r\n\r\n\tif (email_confirmed) return { message: \"Email Confirmed, you can now login\" };\r\n\treturn null;\r\n}\r\nexport default function Login() {\r\n\tconst error = useActionData<typeof action>();\r\n\tconst email_confirmed = useLoaderData<typeof loader>();\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FormComponent method=\"post\">\r\n\t\t\t\t{email_confirmed && (\r\n\t\t\t\t\t<p className=\"mx-auto font-bold\">{email_confirmed.message}</p>\r\n\t\t\t\t)}\r\n\t\t\t\t<InputComponent type=\"hidden\" value=\"email\" name=\"_action\" />\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\tclassName=\"w-4 h-4 opacity-70\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path d=\"M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z\" />\r\n\t\t\t\t\t\t\t<path d=\"M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z\" />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=\"email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\tclassName=\"w-4 h-4 opacity-70\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\tfillRule=\"evenodd\"\r\n\t\t\t\t\t\t\t\td=\"M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z\"\r\n\t\t\t\t\t\t\t\tclipRule=\"evenodd\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Button buttonType={ButtonType.Accent}>Login</Button>\r\n\t\t\t\t{error ? <p className=\"mx-auto\">{error.toString()}</p> : <></>}\r\n\t\t\t</FormComponent>\r\n\r\n\t\t\t<FormComponent method=\"post\">\r\n\t\t\t\t<InputComponent type=\"hidden\" value=\"google\" name=\"_action\" />\r\n\t\t\t\t<Button buttonType={ButtonType.Ghost}>Login with Google</Button>\r\n\t\t\t</FormComponent>\r\n\t\t</div>\r\n\t);\r\n}\r\n", "export default {'entry':{'module':'/build/entry.client-IYAGNZ7J.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-EHM6QMDP.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-LK2J7O4Y.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-DZNYYO2K.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-KTXNWLZK.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-CAESQRRF.js','imports':['/build/_shared/chunk-QZBLPBDB.js','/build/_shared/chunk-OW4LD7OY.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/auth.callback':{'id':'routes/auth.callback','parentId':'root','path':'auth/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.callback-HTHTBQTT.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-C5DQA5JJ.js','imports':['/build/_shared/chunk-OW4LD7OY.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-KGA3PCO6.js','imports':['/build/_shared/chunk-OW4LD7OY.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/post.$postid':{'id':'routes/post.$postid','parentId':'root','path':'post/:postid','index':undefined,'caseSensitive':undefined,'module':'/build/routes/post.$postid-2KBUYYGH.js','imports':['/build/_shared/chunk-QZBLPBDB.js','/build/_shared/chunk-OW4LD7OY.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-PRQEQSCU.js','imports':['/build/_shared/chunk-OW4LD7OY.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/user.$username':{'id':'routes/user.$username','parentId':'root','path':'user/:username','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user.$username-QYVXHLX7.js','imports':['/build/_shared/chunk-QZBLPBDB.js','/build/_shared/chunk-OW4LD7OY.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'30b2cee5','hmr':{'runtime':'/build/_shared\\\\chunk-LK2J7O4Y.js','timestamp':1713627303998},'url':'/build/manifest-30B2CEE5.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\IndieAK\\\\Desktop\\\\programming\\\\web-apps\\\\social-networking-app\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/user.$username.tsx\";\nimport * as route2 from \"./routes/auth.callback.tsx\";\nimport * as route3 from \"./routes/post.$postid.tsx\";\nimport * as route4 from \"./routes/logout.tsx\";\nimport * as route5 from \"./routes/signup.tsx\";\nimport * as route6 from \"./routes/_index.tsx\";\nimport * as route7 from \"./routes/login.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/user.$username\": {\n      id: \"routes/user.$username\",\n      parentId: \"root\",\n      path: \"user/:username\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/auth.callback\": {\n      id: \"routes/auth.callback\",\n      parentId: \"root\",\n      path: \"auth/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/post.$postid\": {\n      id: \"routes/post.$postid\",\n      parentId: \"root\",\n      path: \"post/:postid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "dayjs", "relativeTime", "comment", "HeartIconSolid", "import_react", "import_classnames", "import_jsx_dev_runtime", "cn", "import_classnames", "import_jsx_dev_runtime", "cn", "import_react", "import_jsx_dev_runtime", "classNames", "import_react", "import_jsx_dev_runtime", "import_classnames", "import_react", "import_jsx_dev_runtime", "classNames", "import_solid", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_dayjs", "import_jsx_dev_runtime", "dayjs", "import_react", "import_jsx_dev_runtime", "import_outline", "import_solid", "import_react", "import_dayjs", "import_relativeTime", "import_jsx_dev_runtime", "dayjs", "relativeTime", "comment", "HeartIconSolid", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_node", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_classnames", "import_jsx_dev_runtime", "loader", "cn", "loader", "import_node", "loader", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "action", "import_jsx_dev_runtime", "action", "action", "import_react", "import_node", "import_jsx_dev_runtime", "action", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "action", "loader", "import_react", "import_jsx_dev_runtime", "action", "loader"]
}
